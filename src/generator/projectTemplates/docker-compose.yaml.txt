version: "3.9"

name: \$\{COMPOSE_PROJECT_NAME\}

volumes:

  api-db-volume:
    name: \$\{SERVICE_NAME\}-api-db-volume-\$\{ENV\}
    driver: local

networks:
  default:
    name: \$\{SERVICE_NAME\}-default-network-\$\{ENV\}
  <%= projectName %>-network:
    name: \$\{SERVICE_NAME\}-network-\$\{ENV\}
    driver: bridge

services:

  <%= projectName %>-api:
    profiles: [ api ]
    platform: linux/amd64
    container_name: \$\{SERVICE_NAME\}-api-\$\{ENV\}
    hostname: <%= projectName %>-api
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        ENV: \$\{ENV\}
        NODE_ENV: \$\{NODE_ENV\}
        PORT: \$\{PORT\}
    restart: unless-stopped
    command: npm run develop
    networks:
      - <%= projectName %>-network
    ports:
      - 3000:3000
      - 8080:8080
      - 9222:9222
      - 9229:9229
    volumes:
      - ./:/usr/src/app
    depends_on:
      - <%= projectName %>-db

  <%= projectName %>-db:
    profiles: [ database ]
    image: mongo
    container_name: \$\{SERVICE_NAME\}-db-\$\{ENV\}
    hostname: <%= projectName %>-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: \$\{MONGO_INITDB_ROOT_USERNAME\}
      MONGO_INITDB_ROOT_PASSWORD: \$\{MONGO_INITDB_ROOT_PASSWORD\}
      MONGO_INITDB_DATABASE: \$\{MONGO_INITDB_DATABASE\}
    networks:
      - <%= projectName %>-network
    ports:
      - 27017-27019:27017-27019
    volumes:
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - api-db-volume:/data/db
